[tool.poetry]
name = "speedy-cache"
version = "1.0.0"
description = "A high-performance async cache library for Python"
authors = ["PySuper <pysuper@example.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "core"}]

[tool.poetry.dependencies]
python = "^3.11"
redis = "^4.5.1"
cachetools = "^5.3.0"
aioredis = "^2.0.1"
msgpack = "^1.0.4"
python-dotenv = "^1.0.0"
pydantic = "^2.0.0"
loguru = "^0.7.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.0.0"
pytest-mock = "^3.10.0"
black = "^23.3.0"
isort = "^5.12.0"
mypy = "^1.3.0"
pylint = "^2.17.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py312']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 100

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "C0330",  # bad-continuation
    "C0326",  # bad-whitespace
    "W0621",  # redefined-outer-name
    "W0703",  # broad-except
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "R0914",  # too-many-locals
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=core --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["core"]
omit = ["tests/*", "**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]